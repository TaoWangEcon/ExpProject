{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/Myworld/Dropbox/ExpProject/workingfolder/ind_log.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}21 Jun 2019, 12:55:36
{txt}
{com}. 
. 
. ***************************
. **  Clean and Merge Data **
. ***************************
. 
. use "${c -(}folder{c )-}/SPF/individual/InfExpSPFPointIndQ",clear 
{txt}
{com}. 
. duplicates report year quarter ID 

{p 0 4}{txt}Duplicates in terms of {res} year quarter ID{p_end}

{txt}{hline 10}{c TT}{hline 27}
   copies {c |} observations       surplus
{hline 10}{c +}{hline 27}
        1 {c |}         {res}8195             0
{txt}{hline 10}{c BT}{hline 27}

{com}. 
. merge 1:1 year quarter ID using "${c -(}folder{c )-}/SPF/individual/InfExpSPFDstIndQ.dta"
{res}{txt}{p 0 7 2}
(note: variable
year was 
int, now double to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
quarter was 
byte, now double to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
ID was 
int, now double to accommodate using data's values)
{p_end}

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}           6,102
{txt}{col 9}from master{col 30}{res}           6,102{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}           2,093{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. rename _merge SPFDst_merge
{res}{txt}
{com}. table year if SPFDst_merge ==3

{txt}{hline 10}{c TT}{hline 11}
     YEAR {c |}      Freq.
{hline 10}{c +}{hline 11}
     2007 {c |}        {res}199
     {txt}2008 {c |}        {res}198
     {txt}2009 {c |}        {res}169
     {txt}2010 {c |}        {res}165
     {txt}2011 {c |}        {res}169
     {txt}2012 {c |}        {res}171
     {txt}2013 {c |}        {res}171
     {txt}2014 {c |}        {res}172
     {txt}2015 {c |}        {res}170
     {txt}2016 {c |}        {res}164
     {txt}2017 {c |}        {res}159
     {txt}2018 {c |}        {res}147
     {txt}2019 {c |}         {res}38
{txt}{hline 10}{c BT}{hline 11}

{com}. 
. merge m:1 year quarter using "${c -(}mainfolder{c )-}/OtherData/InfShocksClean.dta",keep(match using master)
{res}{txt}{p 0 7 2}
(note: variable
month was 
float, now double to accommodate using data's values)
{p_end}
(label _merge already defined)

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}           3,112
{txt}{col 9}from master{col 30}{res}           3,112{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}           5,083{txt}  (_merge==3)
{col 5}{hline 41}

{com}. rename _merge infshocks_merge
{res}{txt}
{com}. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 1968q4 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID year quarter 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(23 observations deleted)

{com}. 
. 
. *******************************
. **  Summary Statistics of SPF **
. *******************************
. 
. tabstat ID,s(count) by(dateQ) column(statistics)

{txt}Summary for variables: ID
{col 6}by categories of: dateQ 

{ralign 9:dateQ} {...}
{c |}         N
{hline 10}{c +}{hline 10}
{ralign 9:1968q4} {...}
{c |}{...}
 {res}       87
{txt}{ralign 9:1969q1} {...}
{c |}{...}
 {res}       65
{txt}{ralign 9:1969q2} {...}
{c |}{...}
 {res}       59
{txt}{ralign 9:1969q3} {...}
{c |}{...}
 {res}      128
{txt}{ralign 9:1969q4} {...}
{c |}{...}
 {res}       57
{txt}{ralign 9:1970q1} {...}
{c |}{...}
 {res}       60
{txt}{ralign 9:1970q2} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:1970q3} {...}
{c |}{...}
 {res}       57
{txt}{ralign 9:1970q4} {...}
{c |}{...}
 {res}      131
{txt}{ralign 9:1971q1} {...}
{c |}{...}
 {res}       56
{txt}{ralign 9:1971q2} {...}
{c |}{...}
 {res}       59
{txt}{ralign 9:1971q3} {...}
{c |}{...}
 {res}      106
{txt}{ralign 9:1971q4} {...}
{c |}{...}
 {res}       76
{txt}{ralign 9:1972q1} {...}
{c |}{...}
 {res}       66
{txt}{ralign 9:1972q2} {...}
{c |}{...}
 {res}       71
{txt}{ralign 9:1972q3} {...}
{c |}{...}
 {res}       69
{txt}{ralign 9:1972q4} {...}
{c |}{...}
 {res}       63
{txt}{ralign 9:1973q1} {...}
{c |}{...}
 {res}       68
{txt}{ralign 9:1973q2} {...}
{c |}{...}
 {res}       64
{txt}{ralign 9:1973q3} {...}
{c |}{...}
 {res}       46
{txt}{ralign 9:1973q4} {...}
{c |}{...}
 {res}       59
{txt}{ralign 9:1974q1} {...}
{c |}{...}
 {res}       63
{txt}{ralign 9:1974q2} {...}
{c |}{...}
 {res}       49
{txt}{ralign 9:1974q3} {...}
{c |}{...}
 {res}       54
{txt}{ralign 9:1974q4} {...}
{c |}{...}
 {res}       54
{txt}{ralign 9:1975q1} {...}
{c |}{...}
 {res}       46
{txt}{ralign 9:1975q2} {...}
{c |}{...}
 {res}       47
{txt}{ralign 9:1975q3} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:1975q4} {...}
{c |}{...}
 {res}       48
{txt}{ralign 9:1976q1} {...}
{c |}{...}
 {res}       48
{txt}{ralign 9:1976q2} {...}
{c |}{...}
 {res}       49
{txt}{ralign 9:1976q3} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1976q4} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1977q1} {...}
{c |}{...}
 {res}       41
{txt}{ralign 9:1977q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1977q3} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1977q4} {...}
{c |}{...}
 {res}       45
{txt}{ralign 9:1978q1} {...}
{c |}{...}
 {res}       26
{txt}{ralign 9:1978q2} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1978q3} {...}
{c |}{...}
 {res}       27
{txt}{ralign 9:1978q4} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1979q1} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:1979q2} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1979q3} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:1979q4} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:1980q1} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:1980q2} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1980q3} {...}
{c |}{...}
 {res}       24
{txt}{ralign 9:1980q4} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:1981q1} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1981q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1981q3} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1981q4} {...}
{c |}{...}
 {res}       46
{txt}{ralign 9:1982q1} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1982q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1982q3} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:1982q4} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:1983q1} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:1983q2} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:1983q3} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:1983q4} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1984q1} {...}
{c |}{...}
 {res}       31
{txt}{ralign 9:1984q2} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1984q3} {...}
{c |}{...}
 {res}       27
{txt}{ralign 9:1984q4} {...}
{c |}{...}
 {res}       31
{txt}{ralign 9:1985q1} {...}
{c |}{...}
 {res}       24
{txt}{ralign 9:1985q2} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:1985q3} {...}
{c |}{...}
 {res}       31
{txt}{ralign 9:1985q4} {...}
{c |}{...}
 {res}       25
{txt}{ralign 9:1986q1} {...}
{c |}{...}
 {res}       26
{txt}{ralign 9:1986q2} {...}
{c |}{...}
 {res}       28
{txt}{ralign 9:1986q3} {...}
{c |}{...}
 {res}       24
{txt}{ralign 9:1986q4} {...}
{c |}{...}
 {res}       24
{txt}{ralign 9:1987q1} {...}
{c |}{...}
 {res}       22
{txt}{ralign 9:1987q2} {...}
{c |}{...}
 {res}       28
{txt}{ralign 9:1987q3} {...}
{c |}{...}
 {res}       22
{txt}{ralign 9:1987q4} {...}
{c |}{...}
 {res}       20
{txt}{ralign 9:1988q1} {...}
{c |}{...}
 {res}       18
{txt}{ralign 9:1988q2} {...}
{c |}{...}
 {res}       19
{txt}{ralign 9:1988q3} {...}
{c |}{...}
 {res}       18
{txt}{ralign 9:1988q4} {...}
{c |}{...}
 {res}       15
{txt}{ralign 9:1989q1} {...}
{c |}{...}
 {res}       17
{txt}{ralign 9:1989q2} {...}
{c |}{...}
 {res}       17
{txt}{ralign 9:1989q3} {...}
{c |}{...}
 {res}       15
{txt}{ralign 9:1989q4} {...}
{c |}{...}
 {res}       17
{txt}{ralign 9:1990q1} {...}
{c |}{...}
 {res}       14
{txt}{ralign 9:1990q3} {...}
{c |}{...}
 {res}       11
{txt}{ralign 9:1990q4} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1991q1} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1991q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1991q3} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:1991q4} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:1992q1} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:1992q2} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1992q3} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1992q4} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:1993q1} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:1993q2} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1993q3} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1993q4} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:1994q1} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1994q2} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:1994q3} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1994q4} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:1995q1} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:1995q2} {...}
{c |}{...}
 {res}       52
{txt}{ralign 9:1995q3} {...}
{c |}{...}
 {res}       52
{txt}{ralign 9:1995q4} {...}
{c |}{...}
 {res}       47
{txt}{ralign 9:1996q1} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1996q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1996q3} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:1996q4} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1997q1} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:1997q2} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:1997q3} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1997q4} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:1998q1} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:1998q2} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:1998q3} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:1998q4} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:1999q1} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:1999q2} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:1999q3} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:1999q4} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:2000q1} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2000q2} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2000q3} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:2000q4} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2001q1} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:2001q2} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:2001q3} {...}
{c |}{...}
 {res}       33
{txt}{ralign 9:2001q4} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:2002q1} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:2002q2} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:2002q3} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2002q4} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:2003q1} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:2003q2} {...}
{c |}{...}
 {res}       35
{txt}{ralign 9:2003q3} {...}
{c |}{...}
 {res}       30
{txt}{ralign 9:2003q4} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2004q1} {...}
{c |}{...}
 {res}       31
{txt}{ralign 9:2004q2} {...}
{c |}{...}
 {res}       32
{txt}{ralign 9:2004q3} {...}
{c |}{...}
 {res}       29
{txt}{ralign 9:2004q4} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2005q1} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2005q2} {...}
{c |}{...}
 {res}       46
{txt}{ralign 9:2005q3} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2005q4} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2006q1} {...}
{c |}{...}
 {res}       53
{txt}{ralign 9:2006q2} {...}
{c |}{...}
 {res}       53
{txt}{ralign 9:2006q3} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2006q4} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2007q1} {...}
{c |}{...}
 {res}       49
{txt}{ralign 9:2007q2} {...}
{c |}{...}
 {res}       52
{txt}{ralign 9:2007q3} {...}
{c |}{...}
 {res}       49
{txt}{ralign 9:2007q4} {...}
{c |}{...}
 {res}       48
{txt}{ralign 9:2008q1} {...}
{c |}{...}
 {res}       50
{txt}{ralign 9:2008q2} {...}
{c |}{...}
 {res}       50
{txt}{ralign 9:2008q3} {...}
{c |}{...}
 {res}       47
{txt}{ralign 9:2008q4} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2009q1} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:2009q2} {...}
{c |}{...}
 {res}       51
{txt}{ralign 9:2009q3} {...}
{c |}{...}
 {res}       34
{txt}{ralign 9:2009q4} {...}
{c |}{...}
 {res}       41
{txt}{ralign 9:2010q1} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2010q2} {...}
{c |}{...}
 {res}       44
{txt}{ralign 9:2010q3} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2010q4} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:2011q1} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:2011q2} {...}
{c |}{...}
 {res}       44
{txt}{ralign 9:2011q3} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:2011q4} {...}
{c |}{...}
 {res}       45
{txt}{ralign 9:2012q1} {...}
{c |}{...}
 {res}       45
{txt}{ralign 9:2012q2} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:2012q3} {...}
{c |}{...}
 {res}       48
{txt}{ralign 9:2012q4} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:2013q1} {...}
{c |}{...}
 {res}       46
{txt}{ralign 9:2013q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2013q3} {...}
{c |}{...}
 {res}       41
{txt}{ralign 9:2013q4} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2014q1} {...}
{c |}{...}
 {res}       45
{txt}{ralign 9:2014q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2014q3} {...}
{c |}{...}
 {res}       43
{txt}{ralign 9:2014q4} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2015q1} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:2015q2} {...}
{c |}{...}
 {res}       44
{txt}{ralign 9:2015q3} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2015q4} {...}
{c |}{...}
 {res}       45
{txt}{ralign 9:2016q1} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:2016q2} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2016q3} {...}
{c |}{...}
 {res}       40
{txt}{ralign 9:2016q4} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2017q1} {...}
{c |}{...}
 {res}       42
{txt}{ralign 9:2017q2} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2017q3} {...}
{c |}{...}
 {res}       39
{txt}{ralign 9:2017q4} {...}
{c |}{...}
 {res}       41
{txt}{ralign 9:2018q1} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2018q2} {...}
{c |}{...}
 {res}       36
{txt}{ralign 9:2018q3} {...}
{c |}{...}
 {res}       38
{txt}{ralign 9:2018q4} {...}
{c |}{...}
 {res}       37
{txt}{ralign 9:2019q1} {...}
{c |}{...}
 {res}       37
{txt}{hline 10}{c +}{hline 10}
{ralign 9:Total} {...}
{c |}{...}
 {res}     8171
{txt}{hline 10}{c BT}{hline 10}

{com}. 
. 
. ******************************
. *** Computing some measures **
. ******************************
. 
. gen SPFCPI_FE = CPI1y - Inf1y_CPIAU
{txt}(3475 missing values generated)

{com}. label var SPFCPI_FE "1-yr-ahead forecast error(SPF CPI)"
{txt}
{com}. gen SPFCCPI_FE = CORECPI1y - Inf1y_CPICore
{txt}(6367 missing values generated)

{com}. label var SPFCPI_FE "1-yr-ahead forecast error(SPF core CPI)"
{txt}
{com}. gen SPFPCE_FE = PCE1y - Inf1y_PCE
{txt}(6493 missing values generated)

{com}. label var SPFPCE_FE "1-yr-ahead forecast error(SPF PCE)"
{txt}
{com}. 
. 
. gen SPFCPI_FE0 = CPI1y - Inf1y_CPIAU
{txt}(3475 missing values generated)

{com}. label var SPFCPI_FE0 "1-yr nowcasting error(SPF CPI)"
{txt}
{com}. gen SPFCCPI_FE0 = CORECPI1y - Inf1y_CPICore
{txt}(6367 missing values generated)

{com}. label var SPFCPI_FE0 "1-yr nowcasting error(SPF core CPI)"
{txt}
{com}. gen SPFPCE_FE0 = PCE1y - Inf1y_PCE
{txt}(6493 missing values generated)

{com}. label var SPFPCE_FE "1-yr nowcasting error (SPF PCE)"
{txt}
{com}. 
. 
. *****************************************
. ****  Renaming so that more consistent **
. *****************************************
. 
. 
. rename CPI1y SPFCPI_Mean
{res}{txt}
{com}. rename PCE1y SPFPCE_Mean
{res}{txt}
{com}. rename COREPCE1y SPFCPCE_Mean
{res}{txt}
{com}. rename CORECPI1y SPFCCPI_Mean
{res}{txt}
{com}. 
. rename PRCCPIMean0 SPFCPI_Mean0
{res}{txt}
{com}. rename PRCPCEMean0 SPFPCE_Mean0
{res}{txt}
{com}. 
. rename PRCPCEVar1 SPFPCE_Var
{res}{txt}
{com}. rename PRCCPIVar1 SPFCPI_Var
{res}{txt}
{com}. rename PRCPCEVar0 SPFPCE_Var0
{res}{txt}
{com}. rename PRCCPIVar0 SPFCPI_Var0
{res}{txt}
{com}. 
. rename SPFCPI_FE SPFCPI_FE
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. rename SPFPCE_FE SPFPCE_FE
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. *******************************
. **  Generate Variables       **
. *******************************
. 
. gen InfExp_Mean = .
{txt}(8172 missing values generated)

{com}. gen InfExp_Var = .
{txt}(8172 missing values generated)

{com}. gen InfExp_FE = .
{txt}(8172 missing values generated)

{com}. *gen InfExp_Disg = . 
. 
. 
. gen InfExp_Mean_ch = .
{txt}(8172 missing values generated)

{com}. gen InfExp_Var_ch = .
{txt}(8172 missing values generated)

{com}. gen InfExp_FE_ch = .
{txt}(8172 missing values generated)

{com}. *gen InfExp_Disg_ch = . 
. 
. 
. gen InfExp_Mean_rv = .
{txt}(8172 missing values generated)

{com}. gen InfExp_Var_rv = .
{txt}(8172 missing values generated)

{com}. gen InfExp_FE_rv = .
{txt}(8172 missing values generated)

{com}. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. twoway (hist SPFPCE_Var) (hist SPFPCE_Var0,fcolor(none) lcolor(black)) if SPFPCE_FE!=., by(year)
{res}
{com}. twoway (hist SPFPCE_Var) (hist SPFPCE_Var0,fcolor(none) lcolor(black)) if SPFPCE_Var!=., by(year)
{res}
{com}. twoway (hist SPFPCE_Var) if SPFPCE_Var!=., by(year)
{res}
{com}. twoway (hist SPFPCE_Var) if SPFPCE_Var!=.
{res}
{com}. do "/var/folders/k3/fzq0vzzx2b56ypvhsddgs7hr0000gn/T//SD19275.000000"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. xtset ID dateQ
{err}variable dateQ not found
{txt}{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do "/var/folders/k3/fzq0vzzx2b56ypvhsddgs7hr0000gn/T//SD19275.000000"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 date
{res}{err}date already defined
{txt}{search r(110):r(110);}

end of do-file

{search r(110):r(110);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID year quarter 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID year quarter 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ), ///
>                (kdensity f1.`var'`mom'0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{err}n(50) is not a twoway plot type
{txt}{search r(198):r(198);}

end of do-file

{search r(198):r(198);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID year quarter 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity f1.`var'`mom'0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{err}not sorted
{txt}{search r(5):r(5);}

end of do-file

{search r(5):r(5);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ
{txt}
{com}. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity f1.`var'`mom'0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{err}not sorted
{txt}{search r(5):r(5);}

end of do-file

{search r(5):r(5);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.           xtset ID dateQ
{txt}  4{com}.                   sort ID dateQ
{txt}  5{com}.         local lb: variable label `var'`mom'1 
{txt}  6{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity f1.`var'`mom'0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  7{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  8{com}.  {c )-}
{txt}  9{com}. {c )-}
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{err}not sorted
{txt}{search r(5):r(5);}

end of do-file

{search r(5):r(5);}

{com}. do "/var/folders/k3/fzq0vzzx2b56ypvhsddgs7hr0000gn/T//SD19275.000000"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.           xtset ID dateQ
{txt}  4{com}.         local lb: variable label `var'`mom'1 
{txt}  5{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity f1.`var'`mom'0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  6{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  7{com}.  {c )-}
{txt}  8{com}. {c )-}
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{err}not sorted
{txt}{search r(5):r(5);}

end of do-file

{search r(5):r(5);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' at next quarter"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. count if PRCCPIVarf0!=.
{res} 1374

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/var/folders/k3/fzq0vzzx2b56ypvhsddgs7hr0000gn/T//SD19275.000000"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_hist written in PNG format)

{com}. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_hist written in PNG format)

{com}. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_hist written in PNG format)

{com}. 
. 
. /*
> * histograms only 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(10) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(10) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(20) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(20) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> /*
> * nowcasting and forecasting 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (kdensity  `var'`mom'0, n(30)) ///
>                (kdensity `var'`mom'1, n(30) fcolor(ltblue)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
> ** These are moments of moments 
> local MomentsMom PRCCPIMean0p25 PRCCPIMean1p25 PRCPCEMean0p25 PRCPCEMean1p25 /// 
>               PRCCPIVar0p25 PRCCPIVar1p25 PRCPCEVar0p25 PRCPCEVar1p25 ///
>                           PRCCPIMean0p50 PRCCPIMean1p50 PRCPCEMean0p50 PRCPCEMean1p50 /// 
>               PRCCPIVar0p50 PRCCPIVar1p50 PRCPCEVar0p50 PRCPCEVar1p50 ///
>                           PRCCPIMean0p75 PRCCPIMean1p75 PRCPCEMean0p75 PRCPCEMean1p75 /// 
>               PRCCPIVar0p75 PRCCPIVar1p75 PRCPCEVar0p75 PRCPCEVar1p75 ///
> 
> 
> ** quarterly population data 
> preserve 
> collapse (mean) `Moments' `MomentsMom', by(date year quarter) 
> 
> foreach var in `Moments'{c -(}
> rename `var' `var'mean
> label var `var'mean "Population moments: mean of `var'"
> {c )-}
> save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1",replace 
> restore 
> 
> collapse (sd) `Moments', by(date year quarter) 
> foreach var in `Moments'{c -(}
> replace `var' = `var'^2
> rename `var' `var'disg
> label var `var'disg "Population moments: variance of `var'"
> {c )-}
> merge using "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1"
> drop _merge
> 
> drop date 
>  
> save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ",replace 
> 
> rm "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1.dta"
> 

{txt}end of do-file

{com}. clear

. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> * histograms only 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(10) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(10) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(20) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(20) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. /*
> * nowcasting and forecasting 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (kdensity  `var'`mom'0, n(30)) ///
>                (kdensity `var'`mom'1, n(30) fcolor(ltblue)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. 
. ** These are moments of moments 
. local MomentsMom PRCCPIMean0p25 PRCCPIMean1p25 PRCPCEMean0p25 PRCPCEMean1p25 /// 
>               PRCCPIVar0p25 PRCCPIVar1p25 PRCPCEVar0p25 PRCPCEVar1p25 ///
>                           PRCCPIMean0p50 PRCCPIMean1p50 PRCPCEMean0p50 PRCPCEMean1p50 /// 
>               PRCCPIVar0p50 PRCCPIVar1p50 PRCPCEVar0p50 PRCPCEVar1p50 ///
>                           PRCCPIMean0p75 PRCCPIMean1p75 PRCPCEMean0p75 PRCPCEMean1p75 /// 
>               PRCCPIVar0p75 PRCCPIVar1p75 PRCPCEVar0p75 PRCPCEVar1p75 ///
> 
{txt}
{com}. local Momentsbf PRCCPIMeanb1 PRCPCEMeanf0 /// 
>                 PRCCPIVarb1  PRCPCEVarf0
{txt}
{com}. 
. ** quarterly population data 
. preserve 
{txt}
{com}. collapse (mean) `Moments' `MomentsMom' `Momentsbf', by(date year quarter) 
{err}variable PRCCPIMeanb1 not found
{txt}{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> * histograms only 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(10) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(10) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(20) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(20) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. /*
> * nowcasting and forecasting 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (kdensity  `var'`mom'0, n(30)) ///
>                (kdensity `var'`mom'1, n(30) fcolor(ltblue)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. 
. ** These are moments of moments 
. local MomentsMom PRCCPIMean0p25 PRCCPIMean1p25 PRCPCEMean0p25 PRCPCEMean1p25 /// 
>               PRCCPIVar0p25 PRCCPIVar1p25 PRCPCEVar0p25 PRCPCEVar1p25 ///
>                           PRCCPIMean0p50 PRCCPIMean1p50 PRCPCEMean0p50 PRCPCEMean1p50 /// 
>               PRCCPIVar0p50 PRCCPIVar1p50 PRCPCEVar0p50 PRCPCEVar1p50 ///
>                           PRCCPIMean0p75 PRCCPIMean1p75 PRCPCEMean0p75 PRCPCEMean1p75 /// 
>               PRCCPIVar0p75 PRCCPIVar1p75 PRCPCEVar0p75 PRCPCEVar1p75 ///
> 
{txt}
{com}. local Momentsbf PRCCPIMeanl1 PRCPCEMeanf0 /// 
>                 PRCCPIVarl1  PRCPCEVarf0
{txt}
{com}. 
. ** quarterly population data 
. preserve 
{txt}
{com}. collapse (mean) `Moments' `MomentsMom' `Momentsbf', by(date year quarter) 
{txt}
{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. rename `var' `var'mean
{txt}  3{com}. label var `var'mean "Population moments: mean of `var'"
{txt}  4{com}. {c )-}
{res}{txt}
{com}. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1",replace 
{txt}(note: file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta not found)
file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta saved

{com}. restore 
{txt}
{com}. 
. collapse (sd) `Moments', by(date year quarter) 
{txt}
{com}. foreach var in `Moments'{c -(}
{txt}  2{com}. replace `var' = `var'^2
{txt}  3{com}. rename `var' `var'disg
{txt}  4{com}. label var `var'disg "Population moments: variance of `var'"
{txt}  5{com}. {c )-}
{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}
{com}. merge using "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1"
{txt}{p}
(note: you are using old
{bf:merge} syntax; see
{bf:{help merge:[D] merge}} for new syntax)
{p_end}

{com}. drop _merge
{txt}
{com}. 
. drop date 
{txt}
{com}.  
. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ",replace 
{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ.dta saved

{com}. 
. rm "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1.dta"
{txt}
{com}. 
. 
{txt}end of do-file

{com}. clear

. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revisions  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'f0 - `var'`mom'
{txt}  4{com}.           label var `var'`mom' "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}.  {c )-}
{err}PRCCPIMean ambiguous abbreviation
{txt}{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revisions  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'f0 - `var'`mom'1
{txt}  4{com}.           label var `var'`mom' "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}.  {c )-}
{txt}(908 missing values generated)
{err}PRCCPIMean ambiguous abbreviation
{txt}{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revisions  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'f0 - `var'`mom'1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}.  {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}.  
.  ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'f0 - `var'`mom'1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> */
. 
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(20) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'1, n(50) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'f0 - `var'`mom'1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> */
. 
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(20) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(50) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(20) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'_rv 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(50) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, n(20) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{err}option {bf:n()} not allowed
{txt}{search r(198):r(198);}

end of do-file

{search r(198):r(198);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, bin(20) ) ///
>                (xline 0) , ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{err}xline is not a twoway plot type
{txt}{search r(198):r(198);}

end of do-file

{search r(198):r(198);}

{com}. help xline 

. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, bin(20) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'_rv 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, bin(50) ), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, bin(20) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'_rv 
{txt}  4{com}.     twoway (hist `var'`mom'_rv, bin(50) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. foreach mom in Mean{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'1 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(20) lcolor(blue)), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIMean01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEMean01_rv_true_hist written in PNG format)

{com}. 
. 
. foreach mom in Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         local lb: variable label `var'`mom'_rv 
{txt}  4{com}.     twoway (kdensity `var'`mom'_rv, n(50) lcolor(blue) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
{txt}  5{com}.         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCCPIVar01_rv_true_hist written in PNG format)
{res}{txt}(file /Users/Myworld/Dropbox/ExpProject/workingfolder/graphs/pop/hist/PRCPCEVar01_rv_true_hist written in PNG format)

{com}. 
. ddd
{err}unrecognized command:  ddd
{txt}{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'_rv, n(20) lcolor(blue)), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'_rv 
>     twoway (kdensity `var'`mom'_rv, n(50) lcolor(blue) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> * histograms only 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(10) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(10) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                    xtitle("Mean forecast")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(20) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(20) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                    xtitle("Uncertainty") 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. /*
> * nowcasting and forecasting 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (kdensity  `var'`mom'0, n(30)) ///
>                (kdensity `var'`mom'1, n(30) fcolor(ltblue)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. 
. ** These are moments of moments 
. local MomentsMom PRCCPIMean0p25 PRCCPIMean1p25 PRCPCEMean0p25 PRCPCEMean1p25 /// 
>               PRCCPIVar0p25 PRCCPIVar1p25 PRCPCEVar0p25 PRCPCEVar1p25 ///
>                           PRCCPIMean0p50 PRCCPIMean1p50 PRCPCEMean0p50 PRCPCEMean1p50 /// 
>               PRCCPIVar0p50 PRCCPIVar1p50 PRCPCEVar0p50 PRCPCEVar1p50 ///
>                           PRCCPIMean0p75 PRCCPIMean1p75 PRCPCEMean0p75 PRCPCEMean1p75 /// 
>               PRCCPIVar0p75 PRCCPIVar1p75 PRCPCEVar0p75 PRCPCEVar1p75 ///
> 
{txt}
{com}. local Momentsbf PRCCPIMeanl1 PRCPCEMeanf0 /// 
>                 PRCCPIVarl1  PRCPCEVarf0
{txt}
{com}. 
. ** quarterly population data 
. preserve 
{txt}
{com}. collapse (mean) `Moments' `MomentsMom' `Momentsbf', by(date year quarter) 
{txt}
{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. rename `var' `var'mean
{txt}  3{com}. label var `var'mean "Population moments: mean of `var'"
{txt}  4{com}. {c )-}
{res}{txt}
{com}. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1",replace 
{txt}(note: file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta not found)
file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta saved

{com}. restore 
{txt}
{com}. 
. collapse (sd) `Moments', by(date year quarter) 
{txt}
{com}. foreach var in `Moments'{c -(}
{txt}  2{com}. replace `var' = `var'^2
{txt}  3{com}. rename `var' `var'disg
{txt}  4{com}. label var `var'disg "Population moments: variance of `var'"
{txt}  5{com}. {c )-}
{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}
{com}. merge using "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1"
{txt}{p}
(note: you are using old
{bf:merge} syntax; see
{bf:{help merge:[D] merge}} for new syntax)
{p_end}

{com}. drop _merge
{txt}
{com}. 
. drop date 
{txt}
{com}.  
. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ",replace 
{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ.dta saved

{com}. 
. rm "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1.dta"
{txt}
{com}. 
. 
{txt}end of do-file

{com}. do "/Users/Myworld/Dropbox/ExpProject/workingfolder/DoFile/Step02d_CleaningSPF&SumStat_IndDst.do"
{txt}
{com}. *******************************************************************************
. ** This do file cleans the density/moment estimats of individual SPF 
. ** InfExpSPFDstIndQ.dta. 
. ** And then it generates the population moments from SPF. InfExpSPFDstPopQ.dta.
. ** This data is quarterly. So one may need to convert SCE to quarterly for a 
. ** comparison of the two. 
. ********************************************************************************* 
. 
. clear 
{txt}
{com}. set more off 
{txt}
{com}. global mainfolder "/Users/Myworld/Dropbox/ExpProject/workingfolder"
{txt}
{com}. global datafolder "${c -(}mainfolder{c )-}/SurveyData/SPF/individual"
{txt}
{com}. global sum_graph_folder "${c -(}mainfolder{c )-}/graphs/pop"
{txt}
{com}. global sum_table_folder "${c -(}mainfolder{c )-}/tables"
{txt}
{com}. 
. cd ${c -(}datafolder{c )-}
{res}/Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/individual
{txt}
{com}. 
. use InfExpSPFDstIndQ,clear
{txt}
{com}. 
. local Moments PRCCPIMean0 PRCCPIMean1 PRCPCEMean0 PRCPCEMean1 /// 
>               PRCCPIVar0 PRCCPIVar1 PRCPCEVar0 PRCPCEVar1
{txt}
{com}. 
. *****************************
. **   Summary Stats of SPF  **
. *****************************
.                           
.           
. * table 1
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save 

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1628      1606      1518      1453      1628      1606
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-26472.67 -18576.11 -14787.64 -4144.223 -574.5461 -423879.7
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3557954 -.3144251  .0007294  .0008905
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4318608  .4180752  .4155341  .4188922  .0073694  .0066313
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4885004  .4883978  .4829901  .4807022  .0174449  .0218019
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5241744  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8643356  .6652987  .8650593  .6942495  .0446446  .0464889
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res}        2         2  1.908029  1.993781  .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res}  2.68019  2.555522       2.5  2.452254  .8783811  1.571215
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 8.763064  18618.39  996.2262  3.331012  967.4245   3367980
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1518      1453
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-77.18375 -1351.355
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0058931  .0104073
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .0189756  .0221884
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0424704  .0458355
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0771097  .0961309
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .8783811    1.1326
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} 1.14e+07  111391.2
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-26472.67}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .4318608}}}{space 1}{space 1}{ralign 9:{res:{sf: .4885004}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-18576.11}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .4180752}}}{space 1}{space 1}{ralign 9:{res:{sf: .4883978}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-14787.64}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3557954}}}{space 1}{space 1}{ralign 9:{res:{sf: .4155341}}}{space 1}{space 1}{ralign 9:{res:{sf: .4829901}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-4144.223}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .4188922}}}{space 1}{space 1}{ralign 9:{res:{sf: .4807022}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1628}}}{space 1}{space 1}{ralign 9:{res:{sf:-574.5461}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007294}}}{space 1}{space 1}{ralign 9:{res:{sf: .0073694}}}{space 1}{space 1}{ralign 9:{res:{sf: .0174449}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1606}}}{space 1}{space 1}{ralign 9:{res:{sf:-423879.7}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066313}}}{space 1}{space 1}{ralign 9:{res:{sf: .0218019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1518}}}{space 1}{space 1}{ralign 9:{res:{sf:-77.18375}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0058931}}}{space 1}{space 1}{ralign 9:{res:{sf: .0189756}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1453}}}{space 1}{space 1}{ralign 9:{res:{sf:-1351.355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0104073}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221884}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8643356}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}{space 1}{ralign 9:{res:{sf: 8.763064}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5241744}}}{space 1}{space 1}{ralign 9:{res:{sf: .6652987}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555522}}}{space 1}{space 1}{ralign 9:{res:{sf: 18618.39}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8650593}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.908029}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 996.2262}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6942495}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.993781}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.331012}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0446446}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 967.4245}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0464889}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}{space 1}{ralign 9:{res:{sf:  3367980}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0424704}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .8783811}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.14e+07}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458355}}}{space 1}{space 1}{ralign 9:{res:{sf: .0961309}}}{space 1}{space 1}{ralign 9:{res:{sf:   1.1326}}}{space 1}{space 1}{ralign 9:{res:{sf: 111391.2}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify  
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("rawdata") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. 
.       egen `var'p1=pctile(`var'),p(1)
{txt}  3{com}.           egen `var'p99=pctile(`var'),p(99)
{txt}  4{com}.           replace `var' = . if `var' <`var'p1 | (`var' >`var'p99 & `var'!=.)
{txt}  5{com}. {c )-}
{txt}(31 real changes made, 31 to missing)
(33 real changes made, 33 to missing)
(30 real changes made, 30 to missing)
(28 real changes made, 28 to missing)
(34 real changes made, 34 to missing)
(31 real changes made, 31 to missing)
(29 real changes made, 29 to missing)
(29 real changes made, 29 to missing)

{com}. 
. * table 2
. tabstat `Moments', st(N min p1 p10 p25 p50 p75 p90 p99 max) save

{txt}   stats {...}
{c |}{...}
  PRCCP~n0  PRCCP~n1  PRCPC~n0  PRCPC~n1  PRCCP~r0  PRCCP~r1
{hline 9}{c +}{hline 60}
{ralign 8:N} {...}
{c |}{...}
 {res}     1597      1573      1488      1425      1594      1575
{txt}{ralign 8:min} {...}
{c |}{...}
 {res}-.4027533 -.3517563 -.3550673 -.3144251   .000781  .0008905
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .1839519  .1162736  .1811113  .2044044  .0011571  .0009679
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .4360281  .4270399  .4255956  .4270399  .0095803  .0088585
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res} .4900766  .4892362  .4832073  .4832572  .0180595  .0221731
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .5203517  .5240564  .5199678  .5206167  .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .8582156  .6422359  .8628509  .6701552  .0438226  .0462024
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} 1.998511         2  1.865619  1.947242  .0771097  .0771097
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} 2.552758       2.5  2.303137  2.259464  .6345832  1.239815
{txt}{ralign 8:max} {...}
{c |}{...}
 {res}  2.68019  2.555054       2.5  2.452254  .8514586  1.571215
{txt}{hline 9}{c BT}{hline 60}

   stats {...}
{c |}{...}
  PRCPC~r0  PRCPC~r1
{hline 9}{c +}{hline 20}
{ralign 8:N} {...}
{c |}{...}
 {res}     1489      1424
{txt}{ralign 8:min} {...}
{c |}{...}
 {res} .0008926  .0009548
{txt}{ralign 8:p1} {...}
{c |}{...}
 {res} .0010615  .0010894
{txt}{ralign 8:p10} {...}
{c |}{...}
 {res} .0072885  .0130076
{txt}{ralign 8:p25} {...}
{c |}{...}
 {res}   .01937  .0222012
{txt}{ralign 8:p50} {...}
{c |}{...}
 {res} .0291921  .0333747
{txt}{ralign 8:p75} {...}
{c |}{...}
 {res} .0416667  .0458334
{txt}{ralign 8:p90} {...}
{c |}{...}
 {res} .0661502   .092026
{txt}{ralign 8:p99} {...}
{c |}{...}
 {res} .4814685  .9142628
{txt}{ralign 8:max} {...}
{c |}{...}
 {res} .7210329  1.093869
{txt}{hline 9}{c BT}{hline 20}

{com}. 
. return list

{txt}matrices:
          r(StatTotal) : {res} 10 x 8
{txt}
{com}. mat T = r(StatTotal)'
{txt}
{com}. matlist T
{res}
{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:N}{space 1}{space 1}{ralign 9:min}{space 1}{space 1}{ralign 9:p1}{space 1}{space 1}{ralign 9:p10}{space 1}{space 1}{ralign 9:p25}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1597}}}{space 1}{space 1}{ralign 9:{res:{sf:-.4027533}}}{space 1}{space 1}{ralign 9:{res:{sf: .1839519}}}{space 1}{space 1}{ralign 9:{res:{sf: .4360281}}}{space 1}{space 1}{ralign 9:{res:{sf: .4900766}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1573}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3517563}}}{space 1}{space 1}{ralign 9:{res:{sf: .1162736}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4892362}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1488}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3550673}}}{space 1}{space 1}{ralign 9:{res:{sf: .1811113}}}{space 1}{space 1}{ralign 9:{res:{sf: .4255956}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832073}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1425}}}{space 1}{space 1}{ralign 9:{res:{sf:-.3144251}}}{space 1}{space 1}{ralign 9:{res:{sf: .2044044}}}{space 1}{space 1}{ralign 9:{res:{sf: .4270399}}}{space 1}{space 1}{ralign 9:{res:{sf: .4832572}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1594}}}{space 1}{space 1}{ralign 9:{res:{sf:  .000781}}}{space 1}{space 1}{ralign 9:{res:{sf: .0011571}}}{space 1}{space 1}{ralign 9:{res:{sf: .0095803}}}{space 1}{space 1}{ralign 9:{res:{sf: .0180595}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1575}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008905}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009679}}}{space 1}{space 1}{ralign 9:{res:{sf: .0088585}}}{space 1}{space 1}{ralign 9:{res:{sf: .0221731}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1489}}}{space 1}{space 1}{ralign 9:{res:{sf: .0008926}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010615}}}{space 1}{space 1}{ralign 9:{res:{sf: .0072885}}}{space 1}{space 1}{ralign 9:{res:{sf:   .01937}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     1424}}}{space 1}{space 1}{ralign 9:{res:{sf: .0009548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0010894}}}{space 1}{space 1}{ralign 9:{res:{sf: .0130076}}}{space 1}{space 1}{ralign 9:{res:{sf: .0222012}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:p50}{space 1}{space 1}{ralign 9:p75}{space 1}{space 1}{ralign 9:p90}{space 1}{space 1}{ralign 9:p99}{space 1}{space 1}{ralign 9:max}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:PRCCPIMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5203517}}}{space 1}{space 1}{ralign 9:{res:{sf: .8582156}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.998511}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.552758}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.68019}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5240564}}}{space 1}{space 1}{ralign 9:{res:{sf: .6422359}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.555054}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5199678}}}{space 1}{space 1}{ralign 9:{res:{sf: .8628509}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865619}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.303137}}}{space 1}{space 1}{ralign 9:{res:{sf:      2.5}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEMean1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .5206167}}}{space 1}{space 1}{ralign 9:{res:{sf: .6701552}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.947242}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.259464}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.452254}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0438226}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: .6345832}}}{space 1}{space 1}{ralign 9:{res:{sf: .8514586}}}{space 1}
{space 0}{space 0}{ralign 12:PRCCPIVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0462024}}}{space 1}{space 1}{ralign 9:{res:{sf: .0771097}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.239815}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.571215}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar0}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0291921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416667}}}{space 1}{space 1}{ralign 9:{res:{sf: .0661502}}}{space 1}{space 1}{ralign 9:{res:{sf: .4814685}}}{space 1}{space 1}{ralign 9:{res:{sf: .7210329}}}{space 1}
{space 0}{space 0}{ralign 12:PRCPCEVar1}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .0333747}}}{space 1}{space 1}{ralign 9:{res:{sf: .0458334}}}{space 1}{space 1}{ralign 9:{res:{sf:  .092026}}}{space 1}{space 1}{ralign 9:{res:{sf: .9142628}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.093869}}}{space 1}

{com}. putexcel set "${c -(}sum_table_folder{c )-}/InfExpSPFDstSum.xlsx", modify 
{res}{txt}
{com}. putexcel B2 = matrix(T), sheet("data_winsored") 
{res}{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/tables/InfExpSPFDstSum.xlsx saved

{com}. 
. 
. 
. *******************************
. **  Set Panel Data Structure **
. *******************************
. 
. gen date2=string(year)+"Q"+string(quarter)
{txt}
{com}. gen date3= quarterly(date2,"YQ")
{txt}(1 missing value generated)

{com}. format date3 %tq 
{txt}
{com}. drop date2 
{txt}
{com}. rename date3 dateQ
{res}{txt}
{com}. 
. xtset ID dateQ
{res}{txt}{col 8}panel variable:  {res}ID (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}dateQ, 2007q1 to 2019q1, but with gaps
{txt}{col 17}delta:  {res}1 quarter
{txt}
{com}. sort ID dateQ 
{txt}
{com}. 
. drop if ID==ID[_n-1] & INDUSTRY != INDUSTRY[_n-1]
{txt}(0 observations deleted)

{com}. 
. 
. ******************************
. **   Moments of Moments   ****
. ******************************
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.     forvalues i=0/1{c -(}
{txt}  4{com}.      egen `var'`mom'`i'p75 =pctile(`var'`mom'`i'),p(75) by(year quarter)
{txt}  5{com}.          egen `var'`mom'`i'p25 =pctile(`var'`mom'`i'),p(25) by(year quarter)
{txt}  6{com}.          egen `var'`mom'`i'p50=pctile(`var'`mom'`i'),p(50) by(year quarter)
{txt}  7{com}.          local lb: variable label `var'`mom'`i'
{txt}  8{com}.          label var `var'`mom'`i'p75 "`lb': 75 pctile"
{txt}  9{com}.          label var `var'`mom'`i'p25 "`lb': 25 pctile"
{txt} 10{com}.          label var `var'`mom'`i'p50 "`lb': 50 pctile"
{txt} 11{com}.  {c )-}
{txt} 12{com}.  {c )-}
{txt} 13{com}. {c )-}
{txt}(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)
(1 missing value generated)

{com}. 
. 
. ******************************
. **  Vintages Moments      ****
. ******************************
. 
. ** Forward looking 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'f0 =f1.`var'`mom'0
{txt}  4{com}.          local lb: variable label `var'`mom'0
{txt}  5{com}.          label var `var'`mom'f0 "`lb' in q+1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(721 missing values generated)
(816 missing values generated)
(719 missing values generated)
(811 missing values generated)

{com}. 
. 
. ** Backward looking 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.      gen `var'`mom'l1 =l1.`var'`mom'1
{txt}  4{com}.          local lb: variable label `var'`mom'1
{txt}  5{com}.          label var `var'`mom'l1 "`lb' in q-1"
{txt}  6{com}.  {c )-}
{txt}  7{com}. {c )-}
{txt}(740 missing values generated)
(859 missing values generated)
(740 missing values generated)
(859 missing values generated)

{com}. 
. 
. ******************************
. **  Generate Revision  ****
. ******************************
. 
. 
. foreach mom in Mean Var{c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.       gen `var'`mom'_rv = `var'`mom'0 - `var'`mom'l1
{txt}  4{com}.           label var `var'`mom'_rv "Revision of `var'`mom'"
{txt}  5{com}.    {c )-}
{txt}  6{com}. {c )-}
{txt}(908 missing values generated)
(1014 missing values generated)
(901 missing values generated)
(1008 missing values generated)

{com}. 
.  
. ******************************
. **   Labeling for plots   ****
. ******************************
. 
. 
. foreach mom in Mean {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "expected inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. foreach mom in Var {c -(}
{txt}  2{com}.    foreach var in PRCCPI PRCPCE{c -(}
{txt}  3{com}.         label var `var'`mom'0 "uncertainty about inflation from previous year"
{txt}  4{com}.         label var `var'`mom'1 "uncertainty of 1-year-head expected inflation"
{txt}  5{com}.  {c )-}
{txt}  6{com}. {c )-}
{txt}
{com}. 
. ***************************************
. **   Histograms of Moments  ***********
. ** Maybe replaced by kernel desntiy **
. ***************************************
. 
. * Kernal density plot only 
. /*
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1
>     twoway (kdensity `var'`mom'1,fcolor(none) lcolor(red)), ///
>                by(year,title("Distribution of `lb'")) 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) lcolor(blue)), ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'1_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(20) ) ///
>                (kdensity `var'`mom'f0, n(50) lpattern(dash) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'1, n(50) ) ///
>                (kdensity `var'`mom'f0, n(50) fcolor(ltblue)), ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'1 
>     twoway (kdensity `var'`mom'_rv, n(20) lcolor(blue)), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in mean forecast")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'_rv 
>     twoway (kdensity `var'`mom'_rv, n(50) lcolor(blue) ), ///
>                xline(0) ///
>                by(year,title("Distribution of `lb'")) ytitle("Fraction of population") ///
>                    xtitle("Revision in uncertainty")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'01_rv_true_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> * histograms only 
> foreach mom in Mean{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(10) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(10) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                    xtitle("Mean forecast")
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (histogram `var'`mom'0,bin(20) color(ltblue)) ///
>                (histogram `var'`mom'1,bin(20) fcolor(none) lcolor(red)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" )) ///
>                    xtitle("Uncertainty") 
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. /*
> * nowcasting and forecasting 
> 
> foreach mom in Var{c -(}
>    foreach var in PRCCPI PRCPCE{c -(}
>         local lb: variable label `var'`mom'0
>     twoway (kdensity  `var'`mom'0, n(30)) ///
>                (kdensity `var'`mom'1, n(30) fcolor(ltblue)), by(year,title("Distribution of `lb'")) ///
>                    legend(order(1 "Nowcasting" 2 "Forecasting" ))
>         graph export "${c -(}sum_graph_folder{c )-}/hist/`var'`mom'_hist", as(png) replace 
>  {c )-}
> {c )-}
> */
. 
. 
. 
. ** These are moments of moments 
. local MomentsMom PRCCPIMean0p25 PRCCPIMean1p25 PRCPCEMean0p25 PRCPCEMean1p25 /// 
>               PRCCPIVar0p25 PRCCPIVar1p25 PRCPCEVar0p25 PRCPCEVar1p25 ///
>                           PRCCPIMean0p50 PRCCPIMean1p50 PRCPCEMean0p50 PRCPCEMean1p50 /// 
>               PRCCPIVar0p50 PRCCPIVar1p50 PRCPCEVar0p50 PRCPCEVar1p50 ///
>                           PRCCPIMean0p75 PRCCPIMean1p75 PRCPCEMean0p75 PRCPCEMean1p75 /// 
>               PRCCPIVar0p75 PRCCPIVar1p75 PRCPCEVar0p75 PRCPCEVar1p75 ///
> 
{txt}
{com}. local Momentsrv PRCCPIMeanl1 PRCPCEMeanf0 PRCCPIVarl1  PRCPCEVarf0  ///
>                 PRCCPIMean_rv PRCPCEMean_rv PRCCPIVar_rv  PRCPCEVar_rv
{txt}
{com}. 
. ** quarterly population data 
. preserve 
{txt}
{com}. collapse (mean) `Moments' `MomentsMom' `Momentsrv', by(date year quarter) 
{txt}
{com}. 
. foreach var in `Moments'{c -(}
{txt}  2{com}. rename `var' `var'mean
{txt}  3{com}. label var `var'mean "Population moments: mean of `var'"
{txt}  4{com}. {c )-}
{res}{txt}
{com}. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1",replace 
{txt}(note: file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta not found)
file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ1.dta saved

{com}. restore 
{txt}
{com}. 
. collapse (sd) `Moments', by(date year quarter) 
{txt}
{com}. foreach var in `Moments'{c -(}
{txt}  2{com}. replace `var' = `var'^2
{txt}  3{com}. rename `var' `var'disg
{txt}  4{com}. label var `var'disg "Population moments: variance of `var'"
{txt}  5{com}. {c )-}
{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}(49 real changes made)
{res}{txt}
{com}. merge using "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1"
{txt}{p}
(note: you are using old
{bf:merge} syntax; see
{bf:{help merge:[D] merge}} for new syntax)
{p_end}

{com}. drop _merge
{txt}
{com}. 
. drop date 
{txt}
{com}.  
. save "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ",replace 
{txt}file /Users/Myworld/Dropbox/ExpProject/workingfolder/SurveyData/SPF/InfExpSPFDstPopQ.dta saved

{com}. 
. rm "${c -(}mainfolder{c )-}/SurveyData/SPF/InfExpSPFDstPopQ1.dta"
{txt}
{com}. 
. 
{txt}end of do-file

{com}. clear

. 